# This is the configuration for Porter
# You must define steps for each action, but the rest is optional
# See https://porter.sh/authoring-bundles for documentation on how to configure your bundle
# Uncomment out the sections below to take full advantage of what Porter can do!

name: cnab-aks-winlin
version: 0.1.0
description: "A Porter bundle that creates a multiple OS Kubernetes cluster on AKS, with taints applied."
invocationImage: squillace/cnab-aks-winlin-install:latest
tag: squillace/cnab-aks-winlin:latest

# Uncomment out the line below to use a template Dockerfile for your invocation image
dockerfile: Dockerfile.tmpl

mixins:
  - exec
  - kubernetes
  - az:
      extensions:
      - aks-preview    


parameters:
  - name: AZURE_RESOURCE_GROUP_UPSERT
    description: "The azure resource group to use or create for the cluster resources."
    default: winlin-cnab-test
  - name: CLUSTER_GROUP_REGION
    description: "The azure resource group to use or create for the cluster resources."
    default: eastus2
  - name: CLUSTER_DEPLOYMENT_REGION
    description: "The azure resource group to use or create for the cluster resources."
    default: eastus2
  - name: CLUSTER_NAME
    description: "The name of the AKS cluster."
    default: cnab-created-cluster

credentials:
  - name: AZURE_CLIENT_ID
    description: "The client id for the service principal used to automate the bundle's actions."
    env: AZURE_CLIENT_ID
  - name: TENANT_ID_OR_DNS
    description: "The tenant identity in which the service principal resides."
    env: TENANT_ID_OR_DNS
  - name: AZURE_SP_PASSWORD
    description: "The service principal password that is used to log into Azure inside the bundle."
    env: AZURE_SP_PASSWORD
  - name: WINDOWS_USERNAME
    description: "The username for the Windows nodes. This is typically \"azureuser\", but you can specify valid name."
    env: WINDOWS_USERNAME
  - name: WINDOWS_PASSWORD
    description: "The password for the Windows nodes."
    env: WINDOWS_PASSWORD

install:
  - exec: 
      description: "Logging in to Azure..."
      command: "bash"
      flags:
        c: az login --service-principal --username "{{ bundle.credentials.AZURE_CLIENT_ID}}" --password "{{ bundle.credentials.AZURE_SP_PASSWORD}}" --tenant "{{ bundle.credentials.TENANT_ID_OR_DNS}}" >> /dev/null
  - exec:
      description: "Creating the resource group for the AKS cluster....."
      command: bash
      flags:
        c: az group create -n "{{bundle.parameters.AZURE_RESOURCE_GROUP_UPSERT}}" -l "{{bundle.parameters.CLUSTER_DEPLOYMENT_REGION}}"
  - exec:
      description: "Creating the AKS cluster......"
      command: bash
      flags:
        c: az aks create --service-principal "{{bundle.credentials.AZURE_CLIENT_ID}}" -g "{{bundle.parameters.AZURE_RESOURCE_GROUP_UPSERT}}" -n "{{bundle.parameters.CLUSTER_NAME}}"  --windows-admin-password "{{bundle.credentials.WINDOWS_PASSWORD}}" --windows-admin-username "{{bundle.credentials.WINDOWS_USERNAME}}" --location "{{bundle.parameters.CLUSTER_DEPLOYMENT_REGION}}" --generate-ssh-keys -c 3 -s Standard_D8_v3 --enable-vmss --nodepool-name linux --network-plugin azure --kubernetes-version 1.15.4 --enable-addons monitoring --client-secret "{{bundle.credentials.AZURE_SP_PASSWORD}}" 
  - exec:
      command: bash
      description: "Aquiring the cluster credentials..."
      flags:
        c: az aks get-credentials -g "{{bundle.parameters.AZURE_RESOURCE_GROUP_UPSERT}}" -n "{{bundle.parameters.CLUSTER_NAME}}"
  - exec:
      description: "Adding the Windows nodes to the cluster..."
      command: bash
      flags:
        c: az aks nodepool add -g "{{bundle.parameters.AZURE_RESOURCE_GROUP_UPSERT}}" --cluster-name "{{bundle.parameters.CLUSTER_NAME}}" --os-type Windows -n window -c 2 --node-vm-size Standard_D8s_v3
  - exec:
      description: "Adding the taints to the Windows nodes so Linux workloads that don't tolerate Windows nodes are scheduled elsewhere....."
      command: bash
      flags:
        c: kubectl get nodes -l beta.kubernetes.io/os=windows -o jsonpath='{range .items[*]}{.metadata.name}{"\n"}'  | xargs -I XX kubectl taint nodes XX windows=true:NoSchedule

upgrade:
  - exec:
      description: "Not supported. Clusters are cattle, not pets, unless you're in production. And even then, they should be pets."
      command: bash
      flags:
        c: echo You can wait quite a while here if you do this.

uninstall:
  - exec: 
      description: "Logging in to Azure..."
      command: "bash"
      flags:
        c: az login --service-principal --username "{{ bundle.credentials.AZURE_CLIENT_ID}}" --password "{{ bundle.credentials.AZURE_SP_PASSWORD}}" --tenant "{{ bundle.credentials.TENANT_ID_OR_DNS}}" >> /dev/null
  - exec:
      description: "Destroying the cluster...."
      command: bash
      flags:
        c: az aks delete -g  "{{bundle.parameters.AZURE_RESOURCE_GROUP_UPSERT}}" -n "{{bundle.parameters.CLUSTER_NAME}}" --yes --no-wait


# See https://porter.sh/authoring-bundles/#dependencies
#dependencies:
#  mysql:
#    tag: deislabs/porter-mysql:latest
#    parameters:
#      database-name: wordpress

# See https://porter.sh/wiring/#credentials
#credentials:
#  - name: kubeconfig
#    path: /root/.kube/config
